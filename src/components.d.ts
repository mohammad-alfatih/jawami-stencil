/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface MyComponent {
      'first': string;
      'last': string;
    }
  }

  interface HTMLMyComponentElement extends StencilComponents.MyComponent, HTMLStencilElement {}

  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement;
  }
  interface ElementTagNameMap {
    'my-component': HTMLMyComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-component': JSXElements.MyComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface MyComponentAttributes extends HTMLAttributes {
      'first'?: string;
      'last'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyHeader {

    }
  }

  interface HTMLMyHeaderElement extends StencilComponents.MyHeader, HTMLStencilElement {}

  var HTMLMyHeaderElement: {
    prototype: HTMLMyHeaderElement;
    new (): HTMLMyHeaderElement;
  };
  interface HTMLElementTagNameMap {
    'my-header': HTMLMyHeaderElement;
  }
  interface ElementTagNameMap {
    'my-header': HTMLMyHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-header': JSXElements.MyHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface MyHeaderAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyModal {

    }
  }

  interface HTMLMyModalElement extends StencilComponents.MyModal, HTMLStencilElement {}

  var HTMLMyModalElement: {
    prototype: HTMLMyModalElement;
    new (): HTMLMyModalElement;
  };
  interface HTMLElementTagNameMap {
    'my-modal': HTMLMyModalElement;
  }
  interface ElementTagNameMap {
    'my-modal': HTMLMyModalElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-modal': JSXElements.MyModalAttributes;
    }
  }
  namespace JSXElements {
    export interface MyModalAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;